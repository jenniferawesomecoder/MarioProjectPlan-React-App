{"version":3,"sources":["components/layout/SignedInLinks.js","components/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/actions/projectActions.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/projects/EditProject.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","compose","deleteProject","id","getFirestore","collection","doc","delete","catch","err","firestoreConnect","project","history","useHistory","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","e","preventDefault","push","ProjectList","projects","map","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","uniqBy","firestore","ordered","obj","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","setState","target","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateProject","createProject","authorId","add","Date","updateProject","prevProps","prevState","filter","f","class","update","App","exact","path","component","ProjectDetails","EditProject","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fd62c466.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink pulse lighten-1\">\n          {props.profile.initials}\n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { deleteProject } from '../actions/projectActions'\nimport { useHistory } from 'react-router'\n\nconst ProjectSummary = ({ project, deleteProject }) => {\n  const history = useHistory();\n\n  const handleDelete = e => {\n    e.preventDefault();\n    const { id } = project;\n    deleteProject(id);\n  }\n\n  const handleEdit = e => {\n    e.preventDefault();\n    const { id } = project;\n    history.push(`/${id}/edit`)\n  }\n\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title pink-text pulse text-darken-3 \">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n\n      <span className=\"m-3\" onClick={handleDelete}>Delete</span>\n      <span className=\"m-3\" onClick={handleEdit}>Edit</span>\n    </div>\n  )\n}\n\nconst mapDistpacthToProps = dispatch => {\n  return {\n    deleteProject: (id) => dispatch(deleteProject(id))\n  }\n}\n\nexport default compose(\n  connect(null, mapDistpacthToProps),\n  firestoreConnect([{ collection: 'projects' }])\n)(ProjectSummary);\n","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};\n\nexport const updateProject = (project, id) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n\n    firestore.collection('projects').doc(id).update({\n      ...project\n    });\n  }\n};\n\nexport const deleteProject = id => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firestore.collection('projects').doc(id)\n      .delete()\n      .then(() => {\n        dispatch({ type: 'DELETE_PROJECT', id })\n      }).catch(err => {\n        dispatch({ type: 'DELETE_PROJECT_ERROR', err })\n    })\n  }\n};\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n\nconst ProjectList = ({projects}) => {\n    return (\n      <div className=\"project-list section\">\n        { projects && projects.map(project => {\n          return (\n            <Link to={'/project/' + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          )\n        })}\n      </div>\n    )\n  }\n\n  export default ProjectList\n","import React from 'react'\nimport moment from 'moment'\n\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport { uniqBy } from 'lodash';\n\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: uniqBy(state.firestore.ordered.projects, (obj) => obj.id),\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title indigo-text text-darken-3\">{project.title}</span>\n            <p className=\"project red-text\">{project.content}</p>\n          </div>\n          <div className=\"card-action lighten-4 grey-text\">\n            <div className=\"project blue-text\">Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div className=\"time indigo-text\">{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../actions/authActions'\n\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { updateProject } from '../actions/projectActions'\nimport { Redirect } from 'react-router-dom'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { uniqBy } from 'lodash';\n\nclass CreateProject extends Component {\n  constructor(props){\n  \tsuper(props);\n\n  \tthis.state = {\n      title: '',\n      content: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.projects !== this.props.projects) {\n      const { projects, match } = this.props;\n      const project = projects.filter(f => f.id === match.params.id)[0];\n\n      if (project) {\n        this.setState({\n          title: project.title,\n          content: project.title\n        })\n      }\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { match } = this.props;\n\n    this.props.updateProject(this.state, match.params.id);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    const { title, content } = this.state;\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Update Project</h5>\n\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              id='title'\n              value={title}\n              onChange={this.handleChange}\n            />\n            <label class=\"active\" htmlFor=\"title\">Project Title</label>\n          </div>\n\n          <div className=\"input-field\">\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              value={content}\n              onChange={this.handleChange}\n            />\n           <label class=\"active\" htmlFor=\"content\">Project Content</label>\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Update</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: uniqBy(state.firestore.ordered.projects, (obj) => obj.id),\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProject: (project, id) => dispatch(updateProject(project, id))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: 'projects'}\n  ])\n)(CreateProject)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport EditProject from './components/projects/EditProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n            <Route path='/:id/edit' component={EditProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    case 'DELETE_PROJECT':\n      console.log('delete project');\n      return state;\n    case 'DELETE_PROJECT_ERROR':\n      console.log('delete project error', 'state: ', state, 'action: ', action.project);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA7mhmB6UEYa9QLkWzZXeGpgDgBg6uqpBU\",\n  authDomain: \"projectplan-30217.firebaseapp.com\",\n  databaseURL: \"https://projectplan-30217.firebaseio.com\",\n  projectId: \"projectplan-30217\",\n  storageBucket: \"projectplan-30217.appspot.com\",\n  messagingSenderId: \"730750889688\",\n  appId: \"1:730750889688:web:24e61ed8a0adfd294bb1ad\",\n  measurementId: \"G-06W1HMZE8R\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true})\n \n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {  reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport 'firebase/functions'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,\n  composeEnhancer(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\n  )\n);\n\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n  });\n"],"sourceRoot":""}